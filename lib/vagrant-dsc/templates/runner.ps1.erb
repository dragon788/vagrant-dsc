#
# DSC Runner.
#
# Bootstraps the DSC environment, sets up configuration data
# and runs the DSC Configuration.
#
#

# Set the local PowerShell Module environment path
<% if !options[:module_paths].empty?  %>
$absoluteModulePaths = [string]::Join(";", ("<%= options[:module_paths] %>".Split(";") | ForEach-Object { $_ | Resolve-Path }))

echo "Adding to path: $absoluteModulePaths"
$env:PSModulePath="$absoluteModulePaths;${env:PSModulePath}"
("<%= options[:module_paths] %>".Split(";") | ForEach-Object { gci -Recurse  $_ | ForEach-Object { Unblock-File  $_.FullName} })
<% end %>

$script = $(Join-Path "<%= options[:temp_path] %>" "<%= options[:configuration_file_path] %>" -Resolve)
echo "PSModulePath Configured: ${env:PSModulePath}"
echo ""
echo "Running Configuration file: ${script}"

# Generate the MOF file, only if a MOF path not already provided.
<% if options[:mof_path] == nil %>
# Import the Manifest
. $script

cd "<%= options[:temp_path] %>"
$StagingPath = $(Join-Path "<%= options[:temp_path] %>" "staging")
<% if options[:configuration_data_file_path] != nil %>
$Config = $(iex (Get-Content (Join-Path "<%= options[:temp_path] %>" "<%= options[:configuration_data_file_path] %>" -Resolve) | Out-String))
<% end %>
<%=options[:configuration_name]%> -OutputPath $StagingPath <%= options[:parameters] %><% if options[:configuration_data_file_path] != nil %> -ConfigurationData $Config<% end %>
<% else %> 
$StagingPath = "<%= options[:mof_path] %>"
<% end %>

# Start a DSC Configuration run
Start-DscConfiguration -Force -Wait -Verbose -Path $StagingPath
del $StagingPath\*.mof
